%Codigo del Pendulo
%EL CODIGO FUNCIONA PERO NOSE POR QUE NO ME DAN LAS GRAFICAS IGUAL QUE A FRANCO
%Limpieza de Pantalla
clear all, close all, clc
%Variables
m=.1; Fricc=0.1; long=0.6; g=9.8; M=.5; h=0.001; tiempo=(80/h);delta_pp=0; phi_pp=0;
%Condiciones iniciales
phi(1)=0; color='r';
phi_p(1)=0; delta_p(1)=0; u(1)=0; delta(1)=0; i=1; indice=0;

%Version linealizada en el equilibrio inestable
Mat_A=[0 1 0 0; 0 -Fricc/M -m*g/M 0; 0 0 0 1; 0 Fricc/(long*M) g*(m+M)/(long*M) 0]
Mat_B=[0; 1/M; 0; -1/(long*M)]
Mat_C=[1 0 0 0]%La salida es posición
Mat_M=[Mat_B Mat_A*Mat_B Mat_A^2*Mat_B Mat_A^3*Mat_B];%Matriz Controlabilidad

%Calculo del controlador por asignación de polos
auto_val=eig(Mat_A);
c_ai=conv(conv(conv([1 -auto_val(1)],[1 -auto_val(2)]),[1 -auto_val(3)]),[1 -auto_val(4)]);
Mat_W=[c_ai(4) c_ai(3) c_ai(2) 1; c_ai(3) c_ai(2) 1 0; c_ai(2) 1 0 0; 1 0 0 0];
Mat_T=Mat_M*Mat_W;
A_controlable=inv(Mat_T)*Mat_A*Mat_T %Verificacion de que T este bien

%Construccion del sistema ampliado
Mat_Aa=[Mat_A zeros(4,1); -Mat_C 0];
Mat_Ba=[Mat_B; 0];
Mat_Ma=[Mat_Ba Mat_Aa*Mat_Ba Mat_Aa^2*Mat_Ba Mat_Aa^3*Mat_Ba Mat_Aa^4*Mat_Ba]%Matriz de controlabilidad

%Calculo del controlador por asignacion de polos
auto_val=eig(Mat_Aa);
c_ai=conv(conv(conv(conv([1 -auto_val(1)],[1 -auto_val(2)]),[1 -auto_val(3)]),[1 -auto_val(4)]),[1 -auto_val(5)]);
Mat_Wa=[c_ai(5) c_ai(4) c_ai(3) c_ai(2) 1; c_ai(4) c_ai(3) c_ai(2) 1 0; c_ai(3) c_ai(2) 1 0 0; c_ai(2) 1 0 0 0; 1 0 0 0 0];
Mat_Ta=Mat_Ma*Mat_Wa;
A_controlable=inv(Mat_Ta)*Mat_Aa*Mat_Ta %Verificacion de que T este bien

%Ubicación de los polos de lazo cerrado en mui:
%%%%%%{
mui(1)=-.7;
mui(2)=-.7;
mui(3)=-10 + 0.41;
mui(4)=conj(mui(3));
mui(5)=-1;
%}
%{
mui(1)=-1.4;
mui(2)=-1.8;
mui(3)=-2.1 + 0.001i;
mui(4)=conj(mui(3));
mui(5)=-1;
%}
alfa_ia=conv(conv(conv(conv([1 -mui(3)], [1 -mui(4)]), [1 -mui(2)]), [1 -mui(1)]), [1 -mui(5)]);
Ka=fliplr(alfa_ia(2:6)-c_ai(2:6))*inv(Mat_Ta);
eig(Mat_Aa-Mat_Ba*Ka)
K=Ka(1:4); KI=-Ka(5); %Los valores del controlador se obtienen del K ampliado
Mat_A_O=Mat_A';
Mat_B_O=Mat_C';
Mat_M_Dual=[Mat_B_O Mat_A_O*Mat_B_O Mat_A_O^2*Mat_B_O Mat_A_O^3*Mat_B_O];%Matriz de Controlabilidad

%Ubicacion del observador. Algunas veces mas rapido que el controlador
mui_o=real(mui)*20;
alfaO_i=conv(conv(conv([1 -mui_o(3)], [1 -mui_o(4)]), [1 -mui_o(2)]), [1 -mui_o(1)]);
Mat_T_O=Mat_M_Dual*Mat_W;
Ko=(fliplr(alfaO_i(2:end)-c_ai(2:end-1))*inv(Mat_T_O))';
eig(Mat_A_O'-Ko*Mat_C) %Verifico que todos los polos esten en el semiplano izquierdo
x_hat=[0;0;0;0];%Inicializo el Observador
ref=10; psi(1)=0;

while(i<(tiempo+1))
    estado=[delta(i); delta_p(i); phi(i); phi_p(i)];
    psi_p=ref-Mat_C* estado;
    psi(i+1)=psi(i)+psi_p*h;
    
    u(i)=-K*estado+KI*psi(i+1); %Sin Observador
    %u(i)=-K*x_hat+KI*psi(i+1); %Con Observador
    
    delta_pp=(1/(M+m))*(u(i)-m*long*phi_pp*cos(phi(i)))+m*long*phi_p(i)^2*sin(phi(i))-Fricc*delta_p(i);
    phi_pp=(1/long)*(g*sin(phi(i))-delta_pp*cos(phi(i)));
    delta_p(i+1)=delta_p(i)+h*delta_pp;
    delta(i+1)=delta(i)+h*delta_p(i);
    phi_p(i+1)=phi_p(i)+h*phi_pp;
    phi(i+1)=phi(i)+h*phi_p(i);
    y_sal(i)=Mat_C*estado;
    
    %Observador
    y_sal_O(i)=Mat_C*x_hat;
    y_sal(i)=Mat_C*estado;
    x_hatp=Mat_A*x_hat+Mat_B*u(i)+Ko*(y_sal(i)-y_sal_O(i));
    x_hat=x_hat+h*x_hatp;
    i=i+1;
end

figure(1); hold on; t=1:i; t=t*h;
subplot(3,2,1); plot(t,phi_p,color); grid on; title('Velocidad ángulo'); hold on;
legend('Sin Observador'); legend('boxoff');
subplot(3,2,2); plot(t,phi,color); grid on; title('Ángulo'); hold on;
subplot(3,2,3); plot(t,delta,color); grid on; title('Posición del Carro'); hold on;
subplot(3,2,4); plot(t,delta_p,color); grid on; title('Velocidad del Carro'); hold on;
subplot(3,1,3); plot(t(1:end-1),u,color); grid on; title('Acción de control'); xlabel('Tiempo en Seg.'); hold on;

figure(2); hold on;
subplot(2,2,1); plot(phi,phi,color); grid on; xlabel('Ángulo'); ylabel('Velocidad angular'); hold on;
subplot(2,2,2); plot(delta,delta_p,color); grid on; xlabel('Posición carro'); ylabel('Velocidad Carro'); hold on;
legend('Sin Observador','Con Observador'); legend('boxoff');
