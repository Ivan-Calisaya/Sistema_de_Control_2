%Codigo del motor de CC Punto 2
%%%%%%%%%%%%%%%%%%%%%EL ERROR ES DE LA LINEA 79%%%%%%%%%%%%%%%%%%%%%%%%%%
%Limpieza de Pantalla
clear all, close all, clc

%Variables
Laa= 5e-3;
J= 0.004;
Ra= 0.2;
B= 0.005; %0,005
Ki= 6.5e-5;
Km= 0.055;

%Torque
T1=1.15e-3; %Va a ir variando para pi/2 y -pi/2

%Matrices 
Mat_A=[-Ra/Laa -Km/Laa 0; Ki/J -B/J 0; 0 1 0];
Mat_B=[1/Laa; 0; 0];
Mat_C=[0 0 1 ];% x1=ia   x2=wr   x3=theta
Mat_D=[0];

%Matrices ampliadas
Mat_Aa=[Mat_A zeros(3,1); -Mat_C 0];
Mat_Ba=[Mat_B; 0];
Mat_Cc=[Mat_C 0];

%Diseño del controlador por LQR
%Q=diag([1 1/10000 100 1000000]);
Q=diag([1 1/10000 100 1000000000]);
R=100; %Si achico R tiende a ser mas rapida la respuesta, o tambien voy aumentando Q

%Construccion del Hamiltoniano para el calculo del controlador
Ha=[Mat_Aa -Mat_Ba*inv(R)*Mat_Ba'; -Q -Mat_Aa'];
[n,va]=size(Ha);

[V,D]=eig(Ha);MX1X2=[];
for ii=1:n
    if real(D(ii,ii))<0
        MX1X2=[MX1X2 V(:,ii)];
    end
end

MX1=MX1X2(1:n/2,:);
MX2=MX1X2(n/2+1:end,:);

P=real(MX2*inv(MX1));%Tomo la parte real por un tema de residuos
Ka=inv(R)*Mat_Ba'*P;
K=Ka(1:3); 
KI=Ka(4);
eig(Mat_Aa-Mat_Ba*Ka)%Verifico polos con parte real negativa

%Fin cálculo del controlador

%Calculo del Observador
Mat_A_d=Mat_A';
Mat_B_d=Mat_C'; %probare cambiar estas original C y B
Mat_C_d=Mat_B';

% Qo=diag([12200 43580 15 4]);Ro=2000000;
Qo=diag([1 1/10000 200000]);Ro=0.001;

%Construcción del Hamiltoniano para el cálculo del observador
Ho=[Mat_A_d -Mat_B_d*inv(Ro)*Mat_B_d'; -Qo -Mat_A_d'];
[no,va]=size(Ho);

[V,D]=eig(Ho);MX1X2=[];
for ii=1:no
    if real(D(ii,ii))<0
        MX1X2=[MX1X2 V(:,ii)];
    end
end

MX1=MX1X2(1:no/2,:);
MX2=MX1X2(no/2+1:end,:);

Po=real(MX2*inv(MX1));%Tomo la parte real por un tema de residuos
Ko=(inv(Ro)*Mat_B_d'*Po);
eig(Mat_A-Ko*Mat_C); %ORIGINALMENTE DECIA MAT A Y MAT C
%eig(Mat_A_d'-Ko*Mat_C); %ESTA MAL ESTA LINEA

%Fin cálculo del Observador

J_(1)=0
V_(1)=0;
psi(1)=0;
x_hat=[0; 0; 0];%Inicializo el observador

%Para la simulación
delta_t=1e-3;
tiempo=9;
pasos=round(tiempo/delta_t);
Ci=[0 0 0 0];
t=0:delta_t:(tiempo-delta_t);

%Referencia
ref=(pi/2)*square(2*pi*t/4);

%Torque
T11=(T1/2)+(T1/2)*square(2*pi*t/4);%Función para ir variando el torque

%Condiciones iniciales
x=zeros(4,pasos);
x(1,1)=Ci(1);%ia
x(2,1)=Ci(2);%w
x(3,1)=Ci(3);%theta
x(4,1)=Ci(4);
ua(1)=0;

for i=2:1:pasos
    estado=[x(1,i-1);x(2,i-1);x(3,i-1);x(4,i-1)];%Guardo el estado
    integracion=x(4,i-1)+delta_t*(ref(1,i-1)-Mat_Cc*estado);%Es el termino de la pseudo inversa
    %u_actual=-K*estado(1:3)-integracion*KI;color='r';%Sin observador
    u_actual=-K*x_hat-integracion*KI;color='g'%Con observador
    ua=[ua u_actual];
    
    %Ecuaciones del motor
    ia_p=(-Ra/Laa)*estado(1)-(Km/Laa)*estado(2)+(1/Laa)*u_actual;
    w_p=(Ki/J)*estado(1)-(B/J)*estado(2)-(1/J)*T11(i-1);
    theta_p=estado(2);
    
    xp_actual=[ia_p; w_p; theta_p];
    
    xsig=estado(1:3)+delta_t*xp_actual;
    x(1,i)=xsig(1);
    x(2,i)=xsig(2);
    x(3,i)=xsig(3);
    x(4,i)=integracion;
    
    %Observador
    y_sal_O(i)=Mat_C*x_hat;
    y_sal(i)=Mat_Cc*estado;
    x_hatp=Mat_A*x_hat+Mat_B*u_actual+Ko*(y_sal(i)-y_sal_O(i));
    x_hat=x_hat+delta_t*x_hatp;
end

figure(1)
plot(t,x(3,:),color);title('Angulo Theta y referencia');hold on;
plot(t,ref);hold on;

figure(2)
plot(t,x(2,:),color);title('Velocidad angular, w');hold on;

figure(3)
plot(t,x(1,:),color);title('Corriente Ia');hold on;
